function [Report, secs] = GetResponse_Odd(toffset)

% timeout determines when to stop polling for responses. 
% timeout gives a value in seconds from NOW.
% if timeout == 0, then function waits until button is pressed.

global Info P;

secs = 0;
now = GetSecs;
% Report = NaN;
Report = 0;
isQuit = 0;
keyIsDown = 0;

timeout = 1.5;
stop = now + timeout + toffset;
imageonScreen = 1;

while GetSecs < stop
% while Report==0
% while Report == 2
    if (imageonScreen == 1) && (GetSecs > (secs+toffset))
        StimulusOffset(0);
        imageonScreen = 0;
    end
    [keyIsDown,secs,keyCode] = KbCheck;
    if keyIsDown
        if keyCode(P.YesKey)
            Report = 1;
            % StimulusOffset(toffset);
            % if P.isEEG
            %     Trigger = P.UseTriggers(2, Info.T_fin(itrial).task, Info.T_fin(itrial).category);
            %     SendTrigger(Trigger, P.TriggerDuration)
            % end
            return
        elseif keyCode(P.Quitkey)
            Report = 99;
            % StimulusOffset(toffset);
            return
        end
    % elseif ~keyIsDown
        % Report = 0; % no behavioural response if nontarget or standard image is shown
    %     if P.isEEG
    %             Trigger = P.UseTriggers(2, Info.T_fin(itrial).cond, Info.T_fin(itrial).category);
    %             SendTrigger(Trigger, P.TriggerDuration)
        
    end
    %     StimulusOffset(toffset);
 

    % if GetSecs >= toffset
    % if ((secs - now) > timeout)
    %     timedout = true;
    %     StimulusOffset(0);
    % 
    % end
    
    WaitSecs(.01); %It is a good habit not to poll as fast as possible

end


function StimulusOffset(t)
global window DefaultScreen;
Screen('DrawTexture', window, DefaultScreen);
[VBLTimestamp, t_imageoffset] = Screen('Flip', window, t);
